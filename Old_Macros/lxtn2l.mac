!
! lxtn2l.mac  extends lines to their intersection
!
! usage lxtn2l,line1,kpoi1,line2,kpoi2
!
! [possible enhancment - use dist formulae to determeine arg2, arg3 
!   as closest kps]
!
!
!
!/nopr
l1=arg1
l2=arg2
dist11=(lx(l1,0)-lx(l2,0))**2+(ly(l1,0)-ly(l2,0))**2+(lz(l1,0)-lz(l2,0))**2
dist12=(lx(l1,0)-lx(l2,1))**2+(ly(l1,0)-ly(l2,1))**2+(lz(l1,0)-lz(l2,1))**2
*if,dist11,le,dist12,then
*get,k2,line,l2,kp,1
l2flag=0
*else
*get,k2,line,l2,kp,2
l2flag=1
*endif
dist11=(lx(l1,0)-lx(l2,l2flag))**2+(ly(l1,0)-ly(l2,l2flag))**2+(lz(l1,0)-lz(l2,l2flag))**2
dist21=(lx(l1,1)-lx(l2,l2flag))**2+(ly(l1,1)-ly(l2,l2flag))**2+(lz(l1,1)-lz(l2,l2flag))**2
*if,dist11,le,dist21,then
*get,k1,line,l1,kp,1
*else
*get,k1,line,l1,kp,2
*endif
!
lsal
*get,lmax,line,,num,max
*get,kmax,kp,,num,max
numstr,kp,kmax+1
numstr,line,lmax+1
lsel,s,,,arg1
kpls
ksel,u,,,k1
*get,k1keep,kp,,num,max
lsel,a,,,l2
kpls
!k1=arg2
!k2=arg4
ldist=5*((kx(k1)-kx(k2))**2 + (ky(k1)-ky(k2))**2 +(kz(k1)-kz(k2))**2)**.5
lextnd,arg1,k1,ldist,1
,l2,k2,ldist,1
*get,xl2,line,,num,max
*get,xl1,line,xl2,nxtl
lsbl,xl2,xl1,,dele,dele
*get,knew,kp,,num,max
*get,lxtra,line,,num,max
ldel,lxtra
l,k1keep,knew
ldel,arg1
ldel,l2
lsal
kpls
/replot
lmax=
kmax=
k1keep=
k1=
k2=
ldist=
xl1=
xl2=
knew=
lxtra=
/gopr
