! select component
/nopr
parsav
imme,0
cm,lstart,line
cm,astart,area
cm,kstart,kp
*get,nels,elem,,count
el=elnext(0)
!lsal
lsel,none
kpal
*get,kpmax,kp,,num,max
ksel,none
!*get,lsmax,line,,num,max
kpnum=kpmax
ASEL,NONE
*do,loop,1,nels
k,kpnum+1,nx(nelem(el,1)),ny(nelem(el,1)),0
k,kpnum+2,nx(nelem(el,2)),ny(nelem(el,2)),0
k,kpnum+3,nx(nelem(el,3)),ny(nelem(el,3)),0
k,kpnum+4,nx(nelem(el,4)),ny(nelem(el,4)),0
a,kpnum+1,kpnum+2,kpnum+3,kpnum+4
kpnum=kpnum+4
el=elnext(el)
*enddo
numm,kpoi
cm,new_ar,area
LSEL,R,EXT
cm,temp,line
lsar
cmsel,u,temp
adele,all
ldele,all,,,1
cmsel,,temp
al,all
anew=_return
imme,1
lplo
! 	time to connect
!/gopr
toler=1/1000
cm,start,line
*get,nls,line,,count
ls=lsnext(0)
*do,loop,1,nls
!/gopr
_angl=nint(lsx(ls,.5)/toler)	! slope of ls #1
lsel,r,line,,ls
kpls
lskp
lsel,u,line,,ls
cm,temp_,line	! cm of the two lines attached
*get,chk,line,,count
ls1=lsnext(0)
*do,o,1,chk
_angl1=nint(lsx(ls1,.5)/toler)
*if,_angl1,ne,_angl,then
lsel,u,line,,ls1
*endif
ls1=lsnext(ls1)
*enddo
lsel,a,line,,ls
*get,check,line,,count
*if,check,gt,1,then
!lplot
!llist
lcomb,all,,0
*endif
cmsel,,start
ls=lsnext(ls)
*if,ls,eq,0,*exit
!*ask,read,ready?,
*enddo
! cleam up extra kpoi
lsal
kpls
kpinv
cmsel,u,kstart
kdele,all
asel,,,,anew
lsar
lplo
parres
/gopr




