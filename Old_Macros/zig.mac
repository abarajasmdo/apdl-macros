INIT
/GOPR
/COM ===========================================================================
/COM
/COM   DEFINES ABBREVIATIONS FOR COMMANDS ON THE USER FILE 
/COM
*ABBR,NSTAT  ,*USE,NSTAT      * NODE NUMBER STATUS
*ABBR,ESTAT  ,*USE,ESTAT      * ELEM NUMBER STATUS
*ABBR,NXYZ   ,*USE,NXYZ       * GET NODE COORDINATES IN ACTIVE CSYS
*ABBR,DISN   ,*USE,DISN       * CALCULATES DISTANCE BETWEEN TWO NODES
*ABBR,NMOVE  ,*USE,NMOVE      * MOVES A NODE TO ANOTHER NODE LOCATION
*ABBR,KXYZ   ,*USE,KXYZ       * GET KEYPOINT COORDINATES IN ACTIVE CSYS
*ABBR,DISK   ,*USE,DISK       * CALCULATES DISTANCE BETWEEN TWO KEYPOINTS
*ABBR,E2DT3D ,*USE,E2DT3D     * CONVERTS 2D AREA ELEM TO 3D VOLUME ELEM
*ABBR,DNGEN  ,*USE,DNGEN      * NGEN USING NODES IN PLACE OF COORDINATES
*ABBR,NLGEN  ,*USE,NLGEN      * GENERATES NODES AT EXISTING NODE LOCATION
*ABBR,NRCYC  ,*USE,NRCYC      * ROTATES NODAL COOR SYS FOR CYCLIC SYMMETRY
*ABBR,NRTXZ  ,*USE,NRTXZ      * ROTATES NODAL THXZ ANGLE IN LOCAL COORD SYS
*ABBR,Q4ROT  ,*USE,Q4ROT      * ROTATE 4 NODED QUAD
*ABBR,Q4FIX  ,*USE,Q4FIX      * FIXES DEGENERATE 4 NODED QUAD CONNECTIVITY
*ABBR,H8FIX  ,*USE,H8FIX      * FIXES DEGENERATE 8 NODED HEX CONNECTIVITY
*ABBR,H8REV  ,*USE,H8REV      * REVERSES 8 NODED HEX CONNECTIVITY
*ABBR,SFROT  ,*USE,SFROT      * ROTATE SURFACE FACE 2 XY DIRECTIONS 
*ABBR,H8ROT  ,*USE,H8ROT      * ROTATE 8 NODED BRICK FACE 2 XY DIRECTIONS 
*ABBR,MPL0T  ,*USE,MPLOT      * PLOT ELEMENTS BY MAT  NUMBER
*ABBR,TPL0T  ,*USE,TPLOT      * PLOT ELEMENTS BY TYPE NUMBER
*ABBR,RPL0T  ,*USE,RPLOT      * PLOT ELEMENTS BY REAL NUMBER
*ABBR,WEBM   ,*USE,WEBM       * WRITE ELEMENTS BY MAT  NUMBER TO ELEM FILE
*ABBR,WEBT   ,*USE,WEBT       * WRITE ELEMENTS BY TYPE NUMBER TO ELEM FILE
*ABBR,WEBR   ,*USE,WEBR       * WRITE ELEMENTS BY REAL CONSTANT TO ELEM FILE
*ABBR,WEBN   ,*USE,WEBN       * WRITE ELEMENTS BY ELEM NUMBER TO ELEM FILE
*ABBR,DFILL  ,*USE,DFILL      * GENERATES NODES AT EXISTING NODE LOCATION
/COM
/EOF
NSTAT
/GOPR
/COM ===========================================================================
/COM
/COM  NSTAT     ANSYS4.4   VER 1.0   1/22/93  R.P. ZIEGLER   
/COM
/COM  MODEL MAX NODE NUMBER
*GET,NBIG,MXND
/COM
/COM  SELECTED MIN AND MAX NODE NUMBERS
*GET,NMIN,NDMN
*GET,NMAX,NDMX
/COM
/EOF
ESTAT
/GOPR
/COM ===========================================================================
/COM
/COM  ESTAT   ANSYS4.4   VER 1.0   1/22/93  R.P. ZIEGLER
/COM
/COM  MODEL MAX ELEMENT NUMBER
/COM
*GET,EBIG,MXEL
/COM
/COM  SELECTED MIN AND MAX ELEMENT NUMBERS
/COM
*GET,EMIN,ELMN
*GET,EMAX,ELMX
/COM
/EOF
MSTAT
/GOPR
/COM ===========================================================================
/COM
/COM  MSTAT   ANSYS4.4   VER 1.0   1/22/93  R.P. ZIEGLER
/COM
/COM     FOR SELECTED ELEMENTS
/COM
/COM         MINM - MIN MATERIAL NUMBER
/COM
/COM         MAXM - MAX MATERIAL NUMBER
/COM
/COM         MINR - MIN REAL CONSTANT SET NUMBER
/COM
/COM         MAXR - MAX REAL CONSTANT SET NUMBER
/COM
/COM
/COM  GET SELECTED MIN AND MAX ELEMENT NUMBERS
/COM
*GET,EMIN,ELMN
*GET,EMAX,ELMX
/NOPR
/COM
*IF,EMIN,LT,1,:END
*IF,EMAX,LT,1,:END
ARG1=EMIN
ARG2=EMAX
ARG1=1
MINM=1.0E24
MAXM=-1.0E24
MINR=1.0E24
MAXR=-1.0E24
/COM
AR11=ARG1
:SLA
*GET,AR12,MAT,AR11
*GET,AR13,REAL,AR11
*IF,AR12,EQ,0,:L4
*IF,AR12,GT,MINM,:L1
MINM=AR12
:L1
*IF,AR12,LT,MAXM,:L2
MAXM=AR12
:L2
*IF,AR13,GT,MINR,:L3
MINR=AR13
:L3
*IF,AR13,LT,MAXR,:L4
MAXR=AR13
:L4
*IF,AR11,GE,ARG2,:END
AR11=AR11+1
*GO,:SLA
:END
/GOPR
/EOF
NXYZ      
/GOPR
/COM ===========================================================================
/COM
/COM  NXYZ   ANSYS4.4   VER 1.0   1/22/93  R.P. ZIEGLER
/COM
/COM         GET THE COORDINATES OF A NODE IN THE ACTIVE COORDINATE SYSTEM.
/COM
/COM  INPUTS :
/COM
/COM  ARG1 - NODE
/COM
/COM
/COM  OUTPUTS :
/COM
/COM  XN  -  X COMPONENT IN ACTIVE COORDINATE SYSTEM
/COM
/COM  YN  -  Y COMPONENT IN ACTIVE COORDINATE SYSTEM
/COM
/COM  ZN  -  Z COMPONENT IN ACTIVE COORDINATE SYSTEM
/COM
/COM  AXYN  -  NODAL ROTATION ANGLE THXY
/COM
/COM  AYZN  -  NODAL ROTATION ANGLE THYZ
/COM
/COM  AXZN  -  NODAL ROTATION ANGLE THXZ
/COM
/COM
/COM
/NOPR
*IF,ARG1,LT,1,:END
XN=0
YN=0
ZN=0
*GET,XN,NX,ARG1
*GET,YN,NY,ARG1
*GET,ZN,NZ,ARG1
*GET,AXYN,NTXY,ARG1
*GET,AYZN,NTYZ,ARG1
*GET,AXZN,NTXZ,ARG1
:END
/GOPR
/EOF
DISN      
/GOPR
/COM ===========================================================================
/COM
/COM  DISN   ANSYS4.4   VER 1.0   1/22/93  R.P. ZIEGLER
/COM
/COM         CALCULATE THE COORDINATE INCREMENTS BETWEEN TWO NODES 
/COM         IN THE ACTIVE COORDINATE SYSTEM. THE DISTANCE CALCULATED
/COM         BETWEEN THE TWO NODES IS ONLY VALID IN A CARTESIAN
/COM         COORDINATE SYSTEMS.
/COM
/COM  INPUTS :
/COM
/COM  ARG1 - NODE 1
/COM
/COM  ARG2 - NODE 2
/COM
/COM  OUTPUTS :
/COM
/COM  DXN  - DELTA X COMPONENT IN ACTIVE COORDINATE SYSTEM
/COM
/COM  DYN  - DELTA Y COMPONENT IN ACTIVE COORDINATE SYSTEM
/COM
/COM  DZN  - DELTA Z COMPONENT IN ACTIVE COORDINATE SYSTEM
/COM
/COM  DTN  - DISTANCE BETWEEN NODES ( CARTESIAN COORDINATE SYSTEMS ONLY)
/COM
/NOPR
*IF,ARG1,LT,1,:END
*IF,ARG2,LT,1,:END
*IF,ARG1,EQ,ARG2,:END
*GET,AR10,NX,ARG1
*GET,AR11,NY,ARG1
*GET,AR12,NZ,ARG1
*GET,AR13,NX,ARG2
*GET,AR14,NY,ARG2
*GET,AR15,NZ,ARG2
AR16=AR13-AR10
AR17=AR14-AR11
AR18=AR15-AR12
AR19=(ABS(AR16))**2
AR20=(ABS(AR17))**2
AR21=(ABS(AR18))**2
AR22=(AR19+AR20)+(AR21)
DXN=AR16
DYN=AR17
DZN=AR18
DTN=SQRT(AR22)
:END
/GOPR
/EOF
NMOVE      
/GOPR
/COM ===========================================================================
/COM
/COM  NMOVE  ANSYS4.4   VER 1.0   2/19/93  R.P. ZIEGLER
/COM
/COM         MOVES A NODE TO THE SAME LOCATION OF A SECOND NODE
/COM
/COM  INPUTS :
/COM
/COM  ARG1 - NODE TO BE MOVED OR CREATED
/COM
/COM  ARG2 - NODE THAT DEFINES WERE ARG1 IS TO BE MOVED OR CREATED
/COM
/COM
/COM
/NOPR
*IF,ARG1,LT,1,:END
*IF,ARG2,LT,1,:END
*GET,AR11,NX,ARG2
*GET,AR12,NY,ARG2
*GET,AR13,NZ,ARG2
*GET,AR14,NTXY,ARG2
*GET,AR15,NTYZ,ARG2
*GET,AR16,NTXZ,ARG2
*IF,AR11,NE,0,:L1
*IF,AR12,NE,0,:L1
*IF,AR13,NE,0,:L1
*IF,AR14,NE,0,:L1
*IF,AR15,NE,0,:L1
*IF,AR16,NE,0,:L1
*GO,:END
:L1
N,ARG1,AR11,AR12,AR13,AR14,AR15,AR16
:END
/GOPR
/EOF
KXYZ      
/GOPR
/COM ===========================================================================
/COM
/COM  KXYZ   ANSYS4.4   VER 1.0   1/22/93  R.P. ZIEGLER
/COM
/COM         GET THE COORDINATES OF A KEYPOINT IN THE ACTIVE COORDINATE SYSTEM.
/COM
/COM  INPUTS :
/COM
/COM  ARG1 - KEYPOINT
/COM
/COM
/COM  OUTPUTS :
/COM
/COM  XK  -  X COMPONENT IN ACTIVE COORDINATE SYSTEM
/COM
/COM  YK  -  Y COMPONENT IN ACTIVE COORDINATE SYSTEM
/COM
/COM  ZK  -  Z COMPONENT IN ACTIVE COORDINATE SYSTEM
/COM
/COM
/NOPR
*IF,ARG1,LT,1,:END
XK=0
YK=0
ZK=0
*GET,XK,KX,ARG1
*GET,YK,KY,ARG1
*GET,ZK,KZ,ARG1
:END
/GOPR
/EOF
DISK
/GOPR
/COM ===========================================================================
/COM
/COM  DISK   ANSYS4.4   VER 1.0   1/22/93  R.P. ZIEGLER
/COM
/COM         CALCULATE THE COORDINATE INCREMENTS BETWEEN TWO KEYPOINTS 
/COM         IN THE ACTIVE COORDINATE SYSTEM. THE DISTANCE CALCULATED
/COM         BETWEEN THE TWO NODES IS ONLY VALID IN A CARTESIAN
/COM         COORDINATE SYSTEMS.
/COM
/COM  INPUTS :
/COM
/COM  ARG1 - NODE 1
/COM
/COM  ARG2 - NODE 2
/COM
/COM  OUTPUTS :
/COM
/COM  DXK  - DELTA X COMPONENT IN ACTIVE COORDINATE SYSTEM
/COM
/COM  DYK  - DELTA Y COMPONENT IN ACTIVE COORDINATE SYSTEM
/COM
/COM  DZK  - DELTA Z COMPONENT IN ACTIVE COORDINATE SYSTEM
/COM
/COM  DTK  - DISTANCE BETWEEN KEYPOINTS ( CARTESIAN COORDINATE SYSTEMS ONLY)
/COM
/NOPR
*IF,ARG1,LT,1,:END
*IF,ARG2,LT,1,:END
*IF,ARG1,EQ,ARG2,:END
*GET,AR10,KX,ARG1
*GET,AR11,KY,ARG1
*GET,AR12,KZ,ARG1
*GET,AR13,KX,ARG2
*GET,AR14,KY,ARG2
*GET,AR15,KZ,ARG2
AR16=AR13-AR10
AR17=AR14-AR11
AR18=AR15-AR12
AR19=(ABS(AR16))**2
AR20=(ABS(AR17))**2
AR21=(ABS(AR18))**2
AR22=(AR19+AR20)+(AR21)
DXK=AR16
DYK=AR17
DZK=AR18
DTK=SQRT(AR22)
:END
/GOPR
/EOF
E2DT3D      
/GOPR
/COM ===========================================================================
/COM
/COM  E2DT3D   ANSYS4.4   VER 1.0   1/22/93  R.P. ZIEGLER
/COM
/COM           GENERATE 3D 8 NODED VOLUME ELEMENTS
/COM               FR0M 2D 4 NODED AREA   ELEMENTS
/COM
/COM  INPUTS :
/COM
/COM  ARG1 - NUMBER OF 3D ELEMENT LAYERS TO BE GENERATED
/COM
/COM  ARG2 - NODE NUMGER INCREMENTS BETWEEN NODE LAYERS
/COM
/COM  ARG3 - STARTING  ELEMENT NUMBER
/COM  ARG4 - ENDING    ELEMENT NUMBER
/COM  ARG5 - INCREMENT ELEMENT NUMBER
/COM
/COM         IF ARG3 = -1 ALL SELECTED ELEMENTS 
/COM
/COM  ARG6 - MAT  TABLE NUMBER FOR GENERATED 3D ELEMENTS
/COM  ARG7 - TYPE TABLE NUMBER FOR GENERATED 3D ELEMENTS
/COM  ARG8 - REAL TABLE NUMBER FOR GENERATED 3D ELEMENTS
/COM 
/COM         IF ARG6, ARG7, OR ARG8 IS GREATER THAN 0, GENERATED ELEMENTS
/COM         WILL HAVE MAT, TYPE, AND/OR REAL AS INPUT.
/COM
/COM         IF ARG6, ARG7, OR ARG8 IS EQUAL TO 0, GENERATED ELEMENTS 
/COM         WILL HAVE MAT, TYPE, AND/OR REAL OF ORIGINAL 2D ELEMENT.
/COM 
/COM  ARG9 - STARTING ELEMENT NUMBER FOR 3D ELEMENTS
/COM
/NOPR
*IF,ARG1,LT,1,:END
*IF,ARG2,LT,1,:END
*IF,ARG3,EQ,0,:END
*IF,ARG3,GT,0,:L1
*GET,ARG3,ELMN
*GET,ARG4,ELMX
ARG5=1
:L1
*IF,ARG4,GT,ARG3,:L2
ARG4 = ARG3
:L2
*IF,ARG5,GT,0,:L3
ARG5 = 1 
:L3
*IF,ARG6,EQ,0,:L4
MAT,ARG6
:L4
*IF,ARG7,EQ,0,:L5
TYPE,ARG7
:L5
*IF,ARG8,EQ,0,:L6
REAL,ARG8
:L6
*IF,ARG9,LE,0,:L7
ESTART,ARG9
:L7
AR11 = ARG3
:SLA                    *START LOOP A - ELEMENT LOOP
*GET,AR14,MAT ,AR11
*IF,AR14,LE,0,:ELB
*GET,AR15,TYPE,AR11
*GET,AR16,REAL,AR11
*GET,AR21,EN1,AR11
*GET,AR22,EN2,AR11
*GET,AR23,EN3,AR11
*GET,AR24,EN4,AR11
*IF,ARG6,NE,0,:L8
MAT,AR14
:L8
*IF,ARG7,NE,0,:L9
TYPE,AR15
:L9
*IF,ARG8,NE,0,:L10
REAL,AR16
:L10
*SET,AR10,1
:SLB                   *START LOOP B - LAYERS PER ELEMENT
AR17 = AR21 
AR18 = AR22
AR19 = AR23
AR20 = AR24
AR21=AR17+ARG2
AR22=AR18+ARG2
AR23=AR19+ARG2
AR24=AR20+ARG2
E,AR17,AR18,AR19,AR20,AR21,AR22,AR23,AR24
*IF,AR10,GE,ARG1,:ELB
AR10 = AR10 + 1
*GO,:SLB
:ELB
*IF,AR11,GE,ARG4,:END
AR11 = AR11 + ARG5
*GO,:SLA
:END
/GOPR
/EOF
DNGEN
/GOPR      
/COM ===========================================================================
/COM
/COM  DNGEN  ANSYS4.4   VER 1.0   1/22/93  R.P. ZIEGLER
/COM
/COM         GENERATES NODES BY COPING A PATTERN OF NODES.  THE 
/COM         LOCATION OF EACH SET OF NODES IS DEFINED BY A NODE  
/COM         RELATIVE TO A BASE NODE.
/COM
/COM  INPUTS :
/COM         
/COM  ARG1 - BASE NODE
/COM
/COM  ARG2 - NODE NUMBER INCREMENT FOR EACH SET OF NODES GENERATED
/COM
/COM  ARG3 - SET OF NODES THAT DEFINES THE PATTERN TO BE GENERATED
/COM  ARG4 - BEGINING WITH NODE ARG3 TO ARG4 
/COM  ARG5 - IN STEPS OF ARG5
/COM
/COM  ARG6 - SET OF NODES THAT DEFINE THE LOCATION OF THE GENERATED NODES
/COM  ARG7 - RELATIVE TO THE BASE NODE BEGINING WITH NODE ARG6 TO ARG7 
/COM  ARG8 - IN STEPS OF ARG8 
/COM
/COM
/NOPR
*IF,ARG1,LT,1,:END
*IF,ARG3,LT,1,:END
*IF,ARG6,LT,1,:END
*IF,ARG4,GT,ARG3,:L1
ARG4 = ARG3
:L1
*IF,ARG5,GT,0,:L2
ARG5 = 1 
:L2
*IF,ARG6,LT,1,:END
*IF,ARG7,GT,ARG6,:L3
ARG7 = ARG6
:L3
*IF,ARG8,GT,0,:L4
ARG8 = 1 
:L4
AR11=ARG6
AR12=ARG2 
*GET,AR13,NX,ARG1
*GET,AR14,NY,ARG1
*GET,AR15,NZ,ARG1
:SLA                       *START NODE LOOP ARG6 TO ARG7 BY ARG8
*GET,AR16,NX,AR11
*GET,AR17,NY,AR11
*GET,AR18,NZ,AR11
NGEN,2,AR12,ARG3,ARG4,ARG5,(AR16-AR13),(AR17-AR14),(AR18-AR15)
*IF,AR11,GE,ARG7,:END
AR11=AR11+ARG8
AR12=AR12+ARG2
*GO,:SLA
:END
/GOPR
/EOF
NLGEN
/GOPR      
/COM ===========================================================================
/COM
/COM  NLGEN  ANSYS4.4   VER 1.0   1/22/93  R.P. ZIEGLER
/COM
/COM         GENERATES A SET OF NODES AT THE SAME LOCATION AS AN EXISTING SET OF
/COM         NODES BY COPING A PATTERN OF NODES.  THE NEW NODE NUMBERS DO NOT
/COM         HAVE TO BE AN OFFSET OF THE EXISTING NODE PATTERN.
/COM
/COM  INPUTS :
/COM         
/COM  ARG1 - SET OF NODES THAT DEFINES THE LOCATIONS OF THE NODES TO BE GENERATED
/COM  ARG2 - BEGINING WITH NODE ARG1 TO ARG2
/COM  ARG3 - IN STEPS OF ARG3
/COM
/COM  ARG4 - STARTING NODE NUMBER OF THE GENERATED NODES
/COM
/COM  ARG5 - NODE NUMBER INCREMENT OF THE GENERATED NODES
/COM
/COM
/NOPR
*IF,ARG1,LT,1,:END
*IF,ARG4,LT,1,:END
*IF,ARG2,GT,ARG1,:L1
ARG2 = ARG1
:L1
*IF,ARG3,GT,0,:L2
ARG3 = 1 
:L2
*IF,ARG5,GT,0,:L3
ARG5 = 1
:L3
AR11=ARG1
AR12=ARG4 
:SLA                       *START NODE LOOP ARG6 TO ARG7 BY ARG8
*GET,AR13,NX,AR11
*GET,AR14,NY,AR11
*GET,AR15,NZ,AR11
N,AR12,AR13,AR14,AR15
*IF,AR11,GE,ARG2,:END
AR11=AR11+ARG3
AR12=AR12+ARG5
*GO,:SLA
:END
/GOPR
/EOF
DFILL
/GOPR      
/COM ===========================================================================
/COM
/COM  DFILL  ANSYS4.4   VER 1.0   1/22/93  R.P. ZIEGLER
/COM
/COM         GENERATES NODES BY COPING A PATTERN OF NODES.  THE 
/COM         LOCATION OF EACH SET OF NODES IS DEFINED BY A NODE  
/COM         RELATIVE TO A BASE NODE.
/COM
/COM  INPUTS :
/COM         
/COM  ARG1 - LOCAL CSYS NUMBER
/COM
/COM  ARG2 - NODE NUMBER INCREMENT BETWEEN SETS
/COM
/COM  ARG3 - SET OF NODES THAT DEFINES THE PATTERN TO BE GENERATED
/COM  ARG4 - BEGINING WITH NODE ARG3 TO ARG4 
/COM  ARG5 - IN STEPS OF ARG5
/COM
/COM  ARG6 - SET OF NODES THAT DEFINE THE LOCATION OF THE GENERATED NODES
/COM  ARG7 - RELATIVE TO THE BASE NODE BEGINING WITH NODE ARG6 TO ARG7 
/COM  ARG8 - IN STEPS OF ARG8 
/COM
/COM  ARG9 - NODE NUMBER INCREMENT FOR GENERATED NODES 
/COM
/NOPR
*IF,ARG1,LT,11,:END
*IF,ARG1,GT,40,:END
*IF,ARG2,LE,0,:END
*IF,ARG3,LT,1,:END
*IF,ARG6,LT,1,:END
*IF,ARG4,GT,ARG3,:L1
ARG4 = ARG3
:L1
*IF,ARG5,GT,0,:L2
ARG5 = 1 
:L2
*IF,ARG7,GT,ARG6,:L3
ARG7 = ARG6
:L3
*IF,ARG8,GT,0,:L4
ARG8 = 1 
:L4
AR11=ARG3
:SLA                       *START NODE LOOP ARG3 TO ARG4 BY ARG5
AR20=AR11
CS,ARG1,0,AR11,(AR11+ARG2),ARG4
*GET,AR13,NX,ARG6
AR12=ARG6+ARG8
:SLB                       *START NODE LOOP ARG6 TO ARG7 BY ARG8
*GET,AR15,NX,AR12
N,(AR20+ARG9),(AR15-AR13)
AR20=AR20+ARG9
*IF,AR12,GE,ARG7,:ELB
AR12=AR12+ARG8
*GO,:SLB
:ELB
*IF,AR11,GE,ARG4,:END
AR11=AR11+ARG5
*GO,:SLA
:END
/GOPR
/EOF
NRCYC
/GOPR      
/COM ===========================================================================
/COM
/COM  NRCYC  ANSYS4.4   VER 1.0   2/18/93  R.P. ZIEGLER
/COM
/COM         ROTATES NODAL COORDINATE SYSTEM FOR CYCLIC SYMMETRIC MODELING.
/COM         THE MODEL SHOULD BE CYCLIC SYMMETRIC ABOUT THE GLOBAL Y AXIS.
/COM         CREATES A LOCAL CLYLIDRICAL COORDINATE SYSTEM WITH THE LOCAL
/COM         X AXIS ALIGNED WITH THE GLOBAL X AXIZ AND THE LOCAL Z AXIS
/COM         ALIGNED WITH THE GLOBAL Y AXIS. THE NODAL THXZ ROTATION ANGLE
/COM         WILL BE SET T0 PRODUCE A ROTATE NODAL COORDINATE SYSTEM IN THE
/COM         CYLINDRICAL SYSTEM SUCH THAT 
/COM
/COM         NODAL DIRECTION
/COM
/COM               X    -   RADIAL DIRECTION IN CYLINDRICAL SYSTEM
/COM
/COM               Y    -   AXIAL DIRECTION IN CYLINDRICAL SYSTEM
/COM
/COM               Z    -   TANGENTIAL DIRECTION IN CYLINDRICAL SYSTEM
/COM 
/COM  INPUTS :
/COM        
/COM  ARG1 - LOCAL CYLINDRICAL COORDINATE SYSTEM TO BE CREATED 
/COM
/COM  ARG2 - THE SET OF NODES TO BE ROTATED 
/COM  ARG3 - BEGINING WITH NODE ARG2 TO ARG3  
/COM  ARG4 - IN STEPS OF ARG4
/COM
/COM         IF ARG2 = -1  ALL SELECTED NODES WILL BE ROTATED
/COM         
/COM
/NOPR
*IF,ARG1,LT,11,:END
*IF,ARG1,GT,40,:END
*IF,ARG2,EQ,0,:END
*IF,ARG2,NE,-1,:L1
*GET,ARG2,NDMN
*GET,ARG3,NDMX
:L1
*IF,ARG2,LT,1,:END
*IF,ARG3,GE,ARG2,:L2
ARG3 = ARG2
:L2
*IF,ARG4,GT,0,:L3
ARG4 = 1 
:L3
LOCAL,ARG1,1,0,0,0,0,0,90
AR11=ARG2
:SLA                         *START NODE LOOP ARG2 TO ARG3 BY ARG4
AR12=0                       
*GET,AR12,NX,AR11
*IF,AR12,EQ,0,:NND           *IF RADIUS = 0 GO TO NEXT NODE
*GET,AR13,NY,AR11
*IF,AR13,NE,0,:L4
AR13=1.0E-30
:L4
NMODIFY,AR11,,,,1.0E-30,1.0E-30,AR13
:NND
*IF,AR11,GE,ARG3,:END
AR11=AR11+ARG4
*GO,:SLA
:END
/GOPR
CSYS,0
/EOF
NRTXZ
/GOPR      
/COM ===========================================================================
/COM
/COM  NRTXZ  ANSYS4.4   VER 1.0   2/01/94  R.P. ZIEGLER
/COM
/COM         ROTATES NODAL COORDINATE SYSTEM ANGLE THXZ.
/COM         THE NODES SHOULD BE ABOUT THE LOCAL Y AXIS.
/COM         A LOCAL CLYLIDRICAL COORDINATE SYSTEM WITH THE LOCAL
/COM         X AXIS ALIGNED WITH THE GLOBAL X AXIZ AND THE LOCAL Z AXIS
/COM         ALIGNED WITH THE GLOBAL Y AXIS. THE NODAL THXZ ROTATION ANGLE
/COM         WILL BE SET T0 PRODUCE A ROTATE NODAL COORDINATE SYSTEM IN THE
/COM         CYLINDRICAL SYSTEM SUCH THAT 
/COM
/COM         NODAL DIRECTION
/COM
/COM               X    -   RADIAL DIRECTION IN CYLINDRICAL SYSTEM
/COM
/COM               Y    -   AXIAL DIRECTION IN CYLINDRICAL SYSTEM
/COM
/COM               Z    -   TANGENTIAL DIRECTION IN CYLINDRICAL SYSTEM
/COM 
/COM  INPUTS :
/COM        
/COM  ARG1 - LOCAL CYLINDRICAL COORDINATE SYSTEM TO BE USED
/COM
/COM  ARG2 - THE SET OF NODES TO BE ROTATED 
/COM  ARG3 - BEGINING WITH NODE ARG2 TO ARG3  
/COM  ARG4 - IN STEPS OF ARG4
/COM
/COM         IF ARG2 = -1  ALL SELECTED NODES WILL BE ROTATED
/COM         
/COM
/NOPR
*IF,ARG1,EQ,11,:END
*IF,ARG1,GT,40,:END
*IF,ARG2,EQ,0,:END
*IF,ARG2,NE,-1,:L1
*GET,ARG2,NDMN
*GET,ARG3,NDMX
:L1
*IF,ARG2,LT,1,:END
*IF,ARG3,GE,ARG2,:L2
ARG3 = ARG2
:L2
*IF,ARG4,GT,0,:L3
ARG4 = 1 
:L3
CSYS,0
CSYS,ARG1
*GET,AR10,CSYS
*IF,AR10,NE,ARG1,:END
AR11=ARG2
:SLA                         *START NODE LOOP ARG2 TO ARG3 BY ARG4
AR12=0                       
*GET,AR12,NX,AR11
*IF,AR12,EQ,0,:NND           *IF RADIUS = 0 GO TO NEXT NODE
*GET,AR13,NY,AR11
NMODIFY,AR11,,,,1.0E-12,1.0E-12,AR13
:NND
*IF,AR11,GE,ARG3,:END
AR11=AR11+ARG4
*GO,:SLA
:END
/GOPR
CSYS,0
/EOF
SFROT      
/GOPR
/COM ===========================================================================
/COM
/COM  SFROT   ANSYS4.4   VER 1.0   1/22/93  R.P. ZIEGLER
/COM
/COM          ROTATES FACE 2 TO ALIGN THE SURFACE XY COORDINATE DIRECTIONS
/COM          REORDERS THE NODES OF THE FOUR NODED SURFACE FACE AND  
/COM          REORDERS THE NODES OF THE PARENT 8 NODED BRICK ELEMENT TO ROTATE 
/COM          THE FACE 2 SURFACE STRESSES XY COORDINATE DIRECTIONS.
/COM
/COM  INPUTS :
/COM         
/COM  ARG1 - INDICATES HOW THE ELEMENT FACE 2 (IJNM) IS TO BE ROTATED.
/COM         THE FACE 2 NORMAL VECTOR (IJ X IM), IS POSITIVE IF DIRECTED
/COM         AWAY FROM THE CENTER OF THE ELEMENT, AND IS NEGATIVE IF
/COM         DIRECTED TOWARD THE CENTER.
/COM
/COM           POSITIVE OUTWARD NORMAL    NEGATIVE OUTWARD NORMAL
/COM 
/COM         1      +90  DEG                      -90
/COM 
/COM         2     +180  DEG                      180
/COM 
/COM         3      -90  DEG                      +90
/COM 
/COM  ARG2 - STARTING  SURFACE FACE ELEMENT NUMBER
/COM  ARG3 - ENDING    SURFACE FACE ELEMENT NUMBER 
/COM  ARG4 - INCREMENT SURFACE FACE ELEMENT NUMBER
/COM
/COM         IF ARG2 = -1  ALL SELECTED SURFACE FACE WILL BE ROTATED
/COM  
/NOPR
*IF,ARG1,LT,1,:END
*IF,ARG1,GT,3,:END
*IF,ARG2,NE,-1,:L1
ERSEL,TYPE,20
*GET,ARG2,ELMN
*GET,ARG3,ELMX
ARG4 = 1 
:L1
*IF,ARG2,LT,1,:END
*IF,ARG3,GE,ARG2,:L2
ARG3 = ARG2
:L2
*IF,ARG4,GT,0,:L3
ARG4 = 1 
:L3
ERSEL,TYPE,20
AR11 = ARG2
:SLA                      * START SURFACE FACE LOOP
*GET,AR20,TYPE,AR11              * SURFACE FACE ELEMENT NUMBER  - AR11
*IF,AR20,NE,20,:NSF
*GET,AR21,REAL,AR11              * SURFACE FACE PARENT ELEMENT NUMBER - AR21
EASEL,,AR21                      * ADD PARENT ELEMENT TO ACTIVE SET
*GET,AR12,EN1,AR11                * GET SURFACE FACE NODES 
*GET,AR13,EN2,AR11
*GET,AR14,EN3,AR11
*GET,AR15,EN4,AR11
*GET,AR22,EN1,AR21                * GET PARENT ELEMENT NODES 
*GET,AR23,EN2,AR21
*GET,AR24,EN3,AR21
*GET,AR25,EN4,AR21
*GET,AR26,EN5,AR21
*GET,AR27,EN6,AR21
*GET,AR28,EN7,AR21
*GET,AR29,EN8,AR21
*IF,ARG1,NE,1,:LR2
EMODIFY,AR11,-1,AR13,AR14,AR15,AR12
EMODIFY,AR21,-1,AR23,AR27,AR28,AR24,AR22,AR26,AR29,AR25
*GO,:NSF
:LR2
*IF,ARG1,NE,2,:LR3
EMODIFY,AR11,-1,AR14,AR15,AR12,AR13
EMODIFY,AR21,-1,AR27,AR26,AR29,AR28,AR23,AR22,AR25,AR24
*GO,:NSF
:LR3
EMODIFY,AR11,-1,AR15,AR12,AR13,AR14
EMODIFY,AR21,-1,AR26,AR22,AR25,AR29,AR27,AR23,AR24,AR28
:NSF                        * NEXT SURFACE FACE
*IF,AR11,GE,ARG3,:END
AR11 = AR11 + ARG4
*GO,:SLA
:END
/GOPR
/EOF
Q4ROT      
/GOPR
/COM ===========================================================================
/COM
/COM  Q4ROT   ANSYS4.4   VER 1.0   1/22/93  R.P. ZIEGLER
/COM
/COM          REORDERS THE NODES OF AN 4 NODED ELEMENT
/COM
/COM  INPUTS :
/COM
/COM  ARG1 - INDICATES HOW ELEMENT I-J-K-L IS TO BE ROTATED
/COM
/COM         1   J-K-L-I
/COM 
/COM         2   K-L-I-J
/COM 
/COM         3   L-I-J-K
/COM
/COM         4   I-L-K-L
/COM 
/COM  ARG2 - ROTATE ELEMENTS BEGINING WITH ELEMENT ARG2
/COM  ARG3 - TO ARG3 
/COM  ARG4 - IN STEPS OF ARG4
/COM
/COM         IF ARG2 = -1  ALL SELECTED ELEMENTS WILL BE ROTATED
/COM  
/NOPR
*IF,ARG1,LT,1,:END
*IF,ARG1,GT,4,:END
*IF,ARG2,NE,-1,:L1
*GET,ARG2,ELMN
*GET,ARG3,ELMX
ARG4 = 1 
:L1
*IF,ARG2,LT,1,:END
*IF,ARG3,GE,ARG2,:L2
ARG3 = ARG2
:L2
*IF,ARG4,GT,0,:L3
ARG4 = 1 
:L3
AR11 = ARG2
:SLA                         * START ELEMENT LOOP
*GET,AR20,MAT,AR11           
*IF,AR20,LE,0,:NEL
*GET,AR12,EN1,AR11
*GET,AR13,EN2,AR11
*GET,AR14,EN3,AR11
*GET,AR15,EN4,AR11
*IF,ARG1,NE,1,:R2
*IF,AR14,EQ,AR15,:R1T
EMODIFY,AR11,-1,AR13,AR14,AR15,AR12
*GO,:NEL
:R1T
EMODIFY,AR11,-1,AR13,AR14,AR12,AR12
*GO,:NEL
:R2
*IF,ARG1,NE,2,:R3
*IF,AR14,EQ,AR15,:R2T
EMODIFY,AR11,-1,AR14,AR15,AR12,AR13
*GO,:NEL
:R2T
EMODIFY,AR11,-1,AR14,AR12,AR13,AR13
*GO,:NEL
:R3
*IF,ARG1,NE,3,:R4
*IF,AR14,EQ,AR15,:R3T
EMODIFY,AR11,-1,AR15,AR12,AR13,AR14
*GO,:NEL
:R3T
EMODIFY,AR11,-1,AR15,AR12,AR13,AR13
*GO,:NEL
:R4
*IF,AR14,EQ,AR15,:R4T
EMODIFY,AR11,-1,AR12,AR15,AR14,AR13
*GO,:NEL
:R4T
EMODIFY,AR11,-1,AR12,AR15,AR13,AR13
:NEL                        * NEXT ELEMENT
*IF,AR11,GE,ARG3,:END
AR11 = AR11 + ARG4
*GO,:SLA
:END
/GOPR
/EOF
Q4FIX    
/GOPR
/COM ===========================================================================
/COM
/COM  Q4FIX   ANSYS4.4   VER 1.0   1/22/93  R.P. ZIEGLER
/COM
/COM          REORDERS THE NODES OF AN 4 NODED ELEMENT
/COM
/COM  INPUTS :
/COM
/COM 
/COM  ARG1 - ROTATE ELEMENTS BEGINING WITH ELEMENT ARG1
/COM  ARG2 - TO ARG2 
/COM  ARG3 - IN STEPS OF ARG3
/COM
/COM         IF ARG2 = -1  ALL SELECTED ELEMENTS WILL BE ROTATED
/COM  
/NOPR
*IF,ARG1,EQ,0,:END
*IF,ARG1,NE,-1,:L1
*GET,ARG1,ELMN
*GET,ARG2,ELMX
ARG3=1
:L1
*IF,ARG2,GE,ARG1,:L2
ARG2 = ARG1
:L2
*IF,ARG4,GT,0,:L3
ARG3 = 1 
:L3
AR11 = ARG1
:SLA                         * START ELEMENT LOOP
*GET,AR20,MAT,AR11           
*IF,AR20,LE,0,:NEL
*GET,AR12,EN1,AR11
*GET,AR13,EN2,AR11
*GET,AR14,EN3,AR11
*GET,AR15,EN4,AR11
*IF,AR12,NE,AR13,:R2
EMODIFY,AR11,-1,AR12,AR14,AR15,AR15
*GO,:NEL
:R2
*IF,AR12,NE,AR15,:R3
EMODIFY,AR11,-1,AR12,AR13,AR14,AR14
*GO,:NEL
:R3
*IF,AR13,NE,AR14,:NEL
EMODIFY,AR11,-1,AR12,AR13,AR15,AR15
:NEL                        * NEXT ELEMENT
*IF,AR11,GE,ARG2,:END
AR11 = AR11 + ARG3
*GO,:SLA
:END
/GOPR
/EOF
H8FIX    
/GOPR
/COM ===========================================================================
/COM
/COM  H8FIX   ANSYS4.4   VER 1.0   1/22/93  R.P. ZIEGLER
/COM
/COM          REORDERS THE NODES OF AN 8 NODED ELEMENT
/COM
/COM  INPUTS :
/COM
/COM 
/COM  ARG1 - ROTATE ELEMENTS BEGINING WITH ELEMENT ARG1
/COM  ARG2 - TO ARG2 
/COM  ARG3 - IN STEPS OF ARG3
/COM
/COM         IF ARG2 = -1  ALL SELECTED ELEMENTS WILL BE ROTATED
/COM  
/NOPR
*IF,ARG1,EQ,0,:END
*IF,ARG1,NE,-1,:L1
*GET,ARG1,ELMN
*GET,ARG2,ELMX
ARG3=1
:L1
*IF,ARG2,GE,ARG1,:L2
ARG2 = ARG1
:L2
*IF,ARG4,GT,0,:L3
ARG3 = 1 
:L3
AR11 = ARG1
:SLA                         * START ELEMENT LOOP
*GET,AR20,MAT,AR11           
*IF,AR20,LE,0,:NEL
*GET,AR12,EN1,AR11
*GET,AR13,EN2,AR11
*GET,AR14,EN3,AR11
*GET,AR15,EN4,AR11
*GET,AR16,EN5,AR11
*GET,AR17,EN6,AR11
*GET,AR18,EN7,AR11
*GET,AR19,EN8,AR11
*IF,AR12,NE,AR13,:R2
EMODIFY,AR11,-1,AR12,AR14,AR15,AR15,AR16,AR18,AR19,AR19
*GO,:NEL
:R2
*IF,AR12,NE,AR15,:R3
EMODIFY,AR11,-1,AR12,AR13,AR14,AR14,AR16,AR17,AR18,AR18
*GO,:NEL
:R3
*IF,AR13,NE,AR14,:NEL
EMODIFY,AR11,-1,AR12,AR13,AR15,AR15,AR16,AR17,AR19,AR19
:NEL                        * NEXT ELEMENT
*IF,AR11,GE,ARG2,:END
AR11 = AR11 + ARG3
*GO,:SLA
:END
/GOPR
/EOF
H8REV    
/GOPR
/COM ===========================================================================
/COM
/COM  H8REV   ANSYS4.4   VER 1.0   1/22/93  R.P. ZIEGLER
/COM
/COM          REORDERS THE NODES OF AN 8 NODED ELEMENT
/COM
/COM  INPUTS :
/COM
/COM 
/COM  ARG1 - ROTATE ELEMENTS BEGINING WITH ELEMENT ARG1
/COM  ARG2 - TO ARG2 
/COM  ARG3 - IN STEPS OF ARG3
/COM
/COM         IF ARG2 = -1  ALL SELECTED ELEMENTS WILL BE ROTATED
/COM  
/NOPR
*IF,ARG1,EQ,0,:END
*IF,ARG1,NE,-1,:L1
*GET,ARG1,ELMN
*GET,ARG2,ELMX
ARG3=1
:L1
*IF,ARG2,GE,ARG1,:L2
ARG2 = ARG1
:L2
*IF,ARG4,GT,0,:L3
ARG3 = 1 
:L3
AR11 = ARG1
:SLA                         * START ELEMENT LOOP
*GET,AR20,MAT,AR11           
*IF,AR20,LE,0,:NEL
*GET,AR12,EN1,AR11
*GET,AR13,EN2,AR11
*GET,AR14,EN3,AR11
*GET,AR15,EN4,AR11
*GET,AR16,EN5,AR11
*GET,AR17,EN6,AR11
*GET,AR18,EN7,AR11
*GET,AR19,EN8,AR11
EMODIFY,AR11,-1,AR16,AR17,AR18,AR19,AR12,AR13,AR14,AR15
:NEL                        * NEXT ELEMENT
*IF,AR11,GE,ARG2,:END
AR11 = AR11 + ARG3
*GO,:SLA
:END
/GOPR
/EOF
MPLOT
/GOPR
/COM ===========================================================================
/COM
/COM  MPLOT   ANSYS4.4    VER 1.0   2/08/93  R.P. ZIEGLER
/COM
/COM          PLOTS ANSYS ELEMENTS BY MATERIAL NUMBER.
/COM
/COM  INPUTS :
/COM         
/COM  ARG1 - STARTING  MAT NUMBER
/COM  ARG2 - ENDING    MAT NUMBER
/COM  ARG3 - INCREMENT MAT NUMBER
/COM
/COM  ARG4 - PLOT OPTIONS
/COM
/COM         0   ELEMENT PLOT WITH EXISTING PLOT OPTIONS
/COM
/COM         1   ELEMENT PLOT WITH ELEMENT NUMBERS & NODE NUMBERS
/COM
/NOPR
*IF,ARG1,LT,1,:END
*IF,ARG2,GE,ARG1,:L1
ARG2=ARG1
:L1
*IF,ARG3,GT, 0,:L2
ARG3=1
:L2
AR11=ARG1
:SLA
ESEL,MAT,AR11
*GET,ARG5,ELMX
*IF,ARG5,EQ,0,:NLA
NELEM
*IF,ARG4,EQ,1,:OP1
EPLOT
*GO,:NLA
:OP1
/PNUM,DEFA
/PNUM,ELEM,1
EPLOT
/PNUM,ELEM,0
/PNUM,NODE,1
EPLOT
:NLA
*IF,AR11,GE,ARG2,:END
AR11=AR11+1
*GO,:SLA
:END
/GOPR
/EOF
TPLOT
/GOPR
/COM ===========================================================================
/COM
/COM  TPLOT   ANSYS4.4    VER 1.0   2/08/93  R.P. ZIEGLER
/COM
/COM          PLOTS ANSYS ELEMENTS BY TYPE NUMBER.
/COM
/COM  INPUTS :
/COM         
/COM  ARG1 - STARTING  TYPE NUMBER
/COM  ARG2 - ENDING    TYPE NUMBER
/COM  ARG3 - INCREMENT TYPE NUMBER
/COM
/COM  ARG4 - PLOT OPTIONS
/COM
/COM         0   ELEMENT PLOT WITH EXISTING PLOT OPTIONS
/COM
/COM         1   ELEMENT PLOT WITH ELEMENT NUMBERS & NODE NUMBERS
/COM
/NOPR
*IF,ARG1,LT,1,:END
*IF,ARG2,GT,20,:END
*IF,ARG2,GE,ARG1,:L1
ARG2=ARG1
:L1
*IF,ARG2,GE,ARG1,:L2
ARG2=ARG1
:L2
*IF,ARG3,GT, 0,:L3
ARG3=1
:L3
AR11=ARG1
:SLA
ESEL,TYPE,AR11
*GET,ARG5,ELMX
*IF,ARG5,EQ,0,:NLA
NELEM
*IF,ARG4,EQ,1,:OP1
EPLOT
*GO,:NLA
:OP1
/PNUM,DEFA
/PNUM,ELEM,1
EPLOT
/PNUM,ELEM,0
/PNUM,NODE,1
EPLOT
:NLA
*IF,AR11,GE,ARG2,:END
AR11=AR11+1
*GO,:SLA
:END
/GOPR
/EOF
RPLOT
/GOPR
/COM ===========================================================================
/COM
/COM  RPLOT   ANSYS4.4    VER 1.0   2/08/93  R.P. ZIEGLER
/COM
/COM          PLOTS ANSYS ELEMENTS BY REAL NUMBER.
/COM
/COM  INPUTS :
/COM         
/COM  ARG1 - STARTING  REAL NUMBER
/COM  ARG2 - ENDING    REAL NUMBER
/COM  ARG3 - INCREMENT REAL NUMBER
/COM
/COM  ARG4 - PLOT OPTIONS
/COM
/COM         0   ELEMENT PLOT WITH EXISTING PLOT OPTIONS
/COM
/COM         1   ELEMENT PLOT WITH ELEMENT NUMBERS & NODE NUMBERS
/COM
/NOPR
*IF,ARG1,LT,1,:END
*IF,ARG2,GE,ARG1,:L1
ARG2=ARG1
:L1
*IF,ARG3,GT, 0,:L2
ARG3=1
:L2
AR11=ARG1
:SLA
ESEL,REAL,AR11
*GET,ARG5,ELMX
*IF,ARG5,EQ,0,:NLA
NELEM
*IF,ARG4,EQ,1,:OP1
EPLOT
*GO,:NLA
:OP1
/PNUM,DEFA
/PNUM,ELEM,1
EPLOT
/PNUM,ELEM,0
/PNUM,NODE,1
EPLOT
:NLA
*IF,AR11,GE,ARG2,:END
AR11=AR11+1
*GO,:SLA
:END
/GOPR
/EOF
WEBM
/GOPR
/COM ===========================================================================
/COM
/COM  WEBM   ANSYS4.4    VER 1.0   1/22/93  R.P. ZIEGLER
/COM
/COM          WRITE ANSYS ELEMENTS TO THE ELEMENT FILE BY MATERIAL NUMBER.
/COM
/COM  INPUTS :
/COM         
/COM  ARG1 - STARTING  MATERIAL NUMBER
/COM  ARG2 - ENDING    MATERIAL NUMBER
/COM  ARG3 - INCREMENT MATERIAL NUMBER
/COM
/NOPR
*IF,ARG1,LT,1,:END
*IF,ARG2,GE,ARG1,:L1
ARG2=ARG1
:L1
*IF,ARG3,GT, 0,:L2
ARG3=1
:L2
AR11=ARG1
:SLA
ESEL,MAT,AR11
*GET,ARG4,ELMX
*IF,ARG4,EQ,0,:ELA
EWRITE
:ELA
*IF,AR11,GE,ARG2,:END
AR11=AR11+1
*GO,:SLA
:END
/GOPR
/EOF
WEBT
/GOPR
/COM ===========================================================================
/COM
/COM  WEBT   ANSYS4.4    VER 1.0   1/22/93  R.P. ZIEGLER
/COM
/COM          WRITE ANSYS ELEMENTS TO THE ELEMENT FILE BY TYPE NUMBER.
/COM
/COM  INPUTS :
/COM         
/COM  ARG1 - STARTING  TYPE NUMBER
/COM  ARG2 - ENDING    TYPE NUMBER
/COM  ARG3 - INCREMENT TYPE NUMBER
/COM
/NOPR
*IF,ARG1,LT,1,:END
*IF,ARG2,GT,20,:END
*IF,ARG2,GE,ARG1,:L1
ARG2=ARG1
:L1
*IF,ARG3,GT, 0,:L2
ARG3=1
:L2
AR11=ARG1
:SLA
ESEL,TYPE,AR11
*GET,ARG4,ELMX
*IF,ARG4,EQ,0,:ELA
EWRITE
:ELA
*IF,AR11,GE,ARG2,:END
AR11=AR11+1
*GO,:SLA
:END
/GOPR
/EOF
WEBR
/GOPR
/COM ===========================================================================
/COM
/COM  WEBR   ANSYS4.4    VER 1.0   1/22/93  R.P. ZIEGLER
/COM
/COM          WRITE ANSYS ELEMENTS TO THE ELEMENT FILE BY REAL NUMBER.
/COM
/COM  INPUTS :
/COM         
/COM  ARG1 - STARTING  REAL NUMBER
/COM  ARG2 - ENDING    REAL NUMBER
/COM  ARG3 - INCREMENT REAL NUMBER
/COM
/NOPR
*IF,ARG1,LT,   1,:END
*IF,ARG2,GE,ARG1,:L1
ARG2=ARG1
:L1
*IF,ARG3,GT, 0,:L2
ARG3=1
:L2
AR11=ARG1
:SLA
ARG4=0
ESEL,REAL,AR11
*GET,ARG4,ELMX
*IF,ARG4,EQ,0,:ELA
EWRITE
:ELA
*IF,AR11,GE,ARG2,:END
AR11=AR11+1
*GO,:SLA
:END
/GOPR
/EOF
WEBN
/GOPR
/COM ===========================================================================
/COM
/COM  WEBN   ANSYS4.4    VER 1.0   1/22/93  R.P. ZIEGLER
/COM
/COM          WRITE ANSYS ELEMENTS TO THE ELEMENT FILE BY ELEM NUMBER.
/COM
/COM  INPUTS :
/COM         
/COM  ARG1 - STARTING  ELEMENT NUMBER
/COM  ARG2 - ENDING    ELEMENT NUMBER
/COM  ARG3 - INCREMENT ELEMENT NUMBER
/COM
/NOPR
*IF,ARG1,LT,   1,:END
*IF,ARG2,NE,0,:L1
ARG2=ARG1
:L1
*IF,ARG3,GT, 0,:L2
ARG3=1
:L2
AR11=ARG1
:SLA
ESEL,ELEM,AR11
*GET,ARG4,ELMX
*IF,ARG4,EQ,0,:ELA
EWRITE
:ELA
*IF,AR11,GE,ARG2,:END
AR11=AR11+1
*GO,:SLA
:END
/GOPR
/EOF
